<OpenFlipper>
 
  <element name="message_box">
    <category>Widgets and UI</category>
    <short>Message box</short>
    <long>Shows a message box</long>
    <dataflow>true</dataflow>
    <inputs>
      <input name="message" type="String" external="false" runtime="false">
        <short>Displayed message</short>
        <long>Displayed message. $1, $2 and $3 will be raplaced with the inputs.</long>
        <default>Values: $1 $2 $3</default>
      </input>
      <input name="in1" type="Any" optional="true">
        <short>$1 input</short>
        <long>$1 in the message will be replaced with this input</long>
      </input>
      <input name="in2" type="Any" optional="true">
        <short>$2 input</short>
        <long>$2 in the message will be replaced with this input</long>
      </input>
      <input name="in3" type="Any" optional="true">
        <short>$3 input</short>
        <long>$3 in the message will be replaced with this input</long>
      </input>
    </inputs>
    <code>
      var message = [input="message"];

      message = message.replace(/\$1/g, [input="in1"]);
      message = message.replace(/\$2/g, [input="in2"]);
      message = message.replace(/\$3/g, [input="in3"]);

      visualscripting.messageBox (message);
    </code>
  </element>

  <element name="question_box">
    <category>Widgets and UI</category>
    <short>Yes/No box</short>
    <long>Shows a message box with Yes and No buttons</long>
    <dataflow>true</dataflow>
    <inputs>
      <input name="message" type="String" external="false" runtime="false">
        <short>Displayed message</short>
        <long>Displayed message</long>
        <default>Question?</default>
      </input>
    </inputs>
    <outputs>
      <output name="ret" type="Bool">
        <short>Pressed button</short>
        <long>Pressed button. "true" on Yes and "false" on No</long>
      </output>
    </outputs>
    <code>
      [output="ret"] = visualscripting.questionBox ([input="message"]);
    </code>
  </element>

  <element name="question_box_with_inputs">
    <category>Widgets and UI</category>
    <short>Yes/No with Inputs</short>
    <long>Shows a message box with Yes and No buttons</long>
    <dataflow>true</dataflow>
    <inputs>
      <input name="message" type="String" external="false" runtime="false">
        <short>Displayed message</short>
        <long>Displayed message. $1, $2 and $3 will be raplaced with the inputs.</long>
        <default>Question? $1 $2 $3</default>
      </input>
      <input name="in1" type="Any" optional="true">
        <short>$1 input</short>
        <long>$1 in the message will be replaced with this input</long>
      </input>
      <input name="in2" type="Any" optional="true">
        <short>$2 input</short>
        <long>$2 in the message will be replaced with this input</long>
      </input>
      <input name="in3" type="Any" optional="true">
        <short>$3 input</short>
        <long>$3 in the message will be replaced with this input</long>
      </input>
    </inputs>
    <outputs>
      <output name="ret" type="Bool">
        <short>Pressed button</short>
        <long>Pressed button. "true" on Yes and "false" on No</long>
      </output>
    </outputs>
    <code>
      var message = [input="message"];

      message = message.replace(/\$1/g, [input="in1"]);
      message = message.replace(/\$2/g, [input="in2"]);
      message = message.replace(/\$3/g, [input="in3"]);

      [output="ret"] = visualscripting.questionBox (message);
    </code>
  </element>

  <element name="update_view">
    <category>Widgets and UI</category>
    <short>Update View</short>
    <long>Calls cores update view function</long>
    <dataflow>true</dataflow>
    <code>
      core.updateView();
    </code>
  </element>

  <element name="update_ui">
    <category>Widgets and UI</category>
    <short>Update UI</short>
    <long>Refresh user interface</long>
    <dataflow>true</dataflow>
    <code>
      core.updateUI();
    </code>
  </element>

  <element name="dialog_Continue_box">
    <category>Widgets and UI</category>
    <short>Continue box</short>
    <long>Deliver true until the user clicks on the stop button</long>
    <dataflow>true</dataflow>
    <input name="message" type="String" external="false" runtime="false">
      <short>Displayed message</short>
      <long>Displayed message.</long>
      <default>Stop?</default>
    </input>
    <outputs>
      <output name="continue" type="Bool">
        <short>continue</short>
        <long>Delivers true until stop button is pressed.</long>
      </output>
    </outputs>
    <code>
      var dialog_stop_box_message = [input="message"];

      [output="continue"] = visualscripting.continueBox(dialog_stop_box_message);
    </code>
  </element>

</OpenFlipper>
