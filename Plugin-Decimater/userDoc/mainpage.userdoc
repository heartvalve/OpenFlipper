/** 
\mainpage Documentation for Decimater Plugin

\section Summary

Decimates a given mesh to a low poly mesh.

\ref quick_tutorial

\ref decimaters :
\li \ref incremental
\li \ref multiple_choice
\li \ref mixed

\section quick_tutorial Quick Tutorial
First select one of the \ref decimaters .
The \ref incremental provides the best quality, while
the \ref multiple_choice is the fastest one.
Now, you can choose your constraints and the decimation order.
Don't forget to define stop conditions.

If done, press <i>Initialize</i> and then <i>Decimate</i>.
After pressing "Initialize" or <i>Decimate</i>, it is possible to
change the constraint values and decimate again having 
the original error quadrics of your mesh.
Otherwise, by adding or removing constraints, you have to reinitialize
the decimater. This will update the error quadrics, so the next decimation will 
be based on the errors to the current mesh, and not the original mesh.
Also, changing the <b>\ref decimaters</b>, or the <b>Decimation Order</b>, will
cause a re-initialization.

\note The <b>Initialization</b> saves the error quadric of each vertex.
They will not be updated, until <i>Initialize</i> is pressed again.




\section decimaters Decimaters

\subsection incremental Incremental Decimater

The incremental decimater checks and takes the best collapse in each iteration.
So, this decimater is the first choice for best <b>optimal results</b>, but might be slow.
Use \ref multiple_choice or \ref mixed to get faster, but less accurate results.

\subsection multiple_choice Multiple Choice Decimater

The multiple choice decimater checks Nuber of Random Samples and takes the best one for the next collapse.
As there is no heap involved, this is usually <b>faster</b> than the incremental approach but as it is randomized,
the result is not guarantied to be the best, but still inside the specified constraints.

\subsection mixed Mixed Decimater

Uses Multiple Choice Decimater and Incremental Decimater to get as <b>good and fast results</b> as possible.
This decimater uses several steps of the Multiple Choice Decimater with decreasing constraint threshold.
When 80% of the maximal error are reached or 80% of the collapses have been performed,
it switches back to the Incremental Decimater to do the rest.
*/ 
